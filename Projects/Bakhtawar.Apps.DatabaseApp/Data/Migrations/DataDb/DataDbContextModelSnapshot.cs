// <auto-generated />
using System;
using Bakhtawar.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Bakhtawar.Apps.DatabaseApp.Data.Migrations.DataDb
{
    [DbContext(typeof(DataDbContext))]
    partial class DataDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Bakhtawar.Models.Audio", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.ToTable("Audio");
                });

            modelBuilder.Entity("Bakhtawar.Models.Gallery", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.ToTable("Gallery");
                });

            modelBuilder.Entity("Bakhtawar.Models.Image", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<string>("GalleryId")
                        .IsRequired()
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("GalleryId");

                    b.ToTable("Image");
                });

            modelBuilder.Entity("Bakhtawar.Models.Keyword", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.ToTable("Keyword");
                });

            modelBuilder.Entity("Bakhtawar.Models.Link", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.ToTable("Link");
                });

            modelBuilder.Entity("Bakhtawar.Models.Option", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PollId")
                        .IsRequired()
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("PollId");

                    b.ToTable("Option");
                });

            modelBuilder.Entity("Bakhtawar.Models.Persona", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Persona");
                });

            modelBuilder.Entity("Bakhtawar.Models.Poll", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.ToTable("Poll");
                });

            modelBuilder.Entity("Bakhtawar.Models.Post", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PersonaId")
                        .IsRequired()
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("PersonaId");

                    b.ToTable("Post");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Post");
                });

            modelBuilder.Entity("Bakhtawar.Models.PostKeyword", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<string>("KeywordId")
                        .IsRequired()
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PostId")
                        .IsRequired()
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("KeywordId");

                    b.HasIndex("PostId");

                    b.ToTable("PostKeyword");
                });

            modelBuilder.Entity("Bakhtawar.Models.PostTag", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PostId")
                        .IsRequired()
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<string>("TagId")
                        .IsRequired()
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.HasIndex("TagId");

                    b.ToTable("PostTag");
                });

            modelBuilder.Entity("Bakhtawar.Models.Role", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NormalizedName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Role");
                });

            modelBuilder.Entity("Bakhtawar.Models.RoleClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ClaimType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaim");
                });

            modelBuilder.Entity("Bakhtawar.Models.Tag", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("character varying(2560)")
                        .HasMaxLength(2560);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.ToTable("Tag");
                });

            modelBuilder.Entity("Bakhtawar.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NormalizedEmail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NormalizedUserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("NormalizedEmail")
                        .IsUnique();

                    b.HasIndex("NormalizedUserName")
                        .IsUnique();

                    b.HasIndex("PhoneNumber")
                        .IsUnique();

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("User");
                });

            modelBuilder.Entity("Bakhtawar.Models.UserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("ClaimType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaim");
                });

            modelBuilder.Entity("Bakhtawar.Models.UserLogin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("LoginProvider")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("LoginProvider", "ProviderKey")
                        .IsUnique();

                    b.ToTable("UserLogin");
                });

            modelBuilder.Entity("Bakhtawar.Models.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId", "RoleId")
                        .IsUnique();

                    b.ToTable("UserRole");
                });

            modelBuilder.Entity("Bakhtawar.Models.Video", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.ToTable("Video");
                });

            modelBuilder.Entity("Bakhtawar.Models.Vote", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<string>("OptionId")
                        .IsRequired()
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PersonaId")
                        .IsRequired()
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("OptionId");

                    b.HasIndex("PersonaId");

                    b.ToTable("Vote");
                });

            modelBuilder.Entity("Bakhtawar.Models.AudioPost", b =>
                {
                    b.HasBaseType("Bakhtawar.Models.Post");

                    b.Property<string>("AudioId")
                        .IsRequired()
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.HasIndex("AudioId")
                        .IsUnique();

                    b.HasDiscriminator().HasValue("AudioPost");
                });

            modelBuilder.Entity("Bakhtawar.Models.GalleryPost", b =>
                {
                    b.HasBaseType("Bakhtawar.Models.Post");

                    b.Property<string>("GalleryId")
                        .IsRequired()
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.HasIndex("GalleryId")
                        .IsUnique();

                    b.HasDiscriminator().HasValue("GalleryPost");
                });

            modelBuilder.Entity("Bakhtawar.Models.ImagePost", b =>
                {
                    b.HasBaseType("Bakhtawar.Models.Post");

                    b.Property<string>("ImageId")
                        .IsRequired()
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.HasIndex("ImageId")
                        .IsUnique();

                    b.HasDiscriminator().HasValue("ImagePost");
                });

            modelBuilder.Entity("Bakhtawar.Models.LinkPost", b =>
                {
                    b.HasBaseType("Bakhtawar.Models.Post");

                    b.Property<string>("LinkId")
                        .IsRequired()
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.HasIndex("LinkId")
                        .IsUnique();

                    b.HasDiscriminator().HasValue("LinkPost");
                });

            modelBuilder.Entity("Bakhtawar.Models.PollPost", b =>
                {
                    b.HasBaseType("Bakhtawar.Models.Post");

                    b.Property<string>("PollId")
                        .IsRequired()
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.HasIndex("PollId")
                        .IsUnique();

                    b.HasDiscriminator().HasValue("PollPost");
                });

            modelBuilder.Entity("Bakhtawar.Models.VideoPost", b =>
                {
                    b.HasBaseType("Bakhtawar.Models.Post");

                    b.Property<string>("VideoId")
                        .IsRequired()
                        .HasColumnType("character varying(256)")
                        .HasMaxLength(256);

                    b.HasIndex("VideoId")
                        .IsUnique();

                    b.HasDiscriminator().HasValue("VideoPost");
                });

            modelBuilder.Entity("Bakhtawar.Models.Image", b =>
                {
                    b.HasOne("Bakhtawar.Models.Gallery", "Gallery")
                        .WithMany("Images")
                        .HasForeignKey("GalleryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Bakhtawar.Models.Option", b =>
                {
                    b.HasOne("Bakhtawar.Models.Poll", "Poll")
                        .WithMany("Options")
                        .HasForeignKey("PollId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Bakhtawar.Models.Persona", b =>
                {
                    b.HasOne("Bakhtawar.Models.User", "User")
                        .WithMany("Personas")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Bakhtawar.Models.Post", b =>
                {
                    b.HasOne("Bakhtawar.Models.Persona", "Persona")
                        .WithMany("Posts")
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Bakhtawar.Models.PostKeyword", b =>
                {
                    b.HasOne("Bakhtawar.Models.Keyword", "Keyword")
                        .WithMany("PostKeywords")
                        .HasForeignKey("KeywordId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Bakhtawar.Models.Post", "Post")
                        .WithMany("PostKeywords")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Bakhtawar.Models.PostTag", b =>
                {
                    b.HasOne("Bakhtawar.Models.Post", "Post")
                        .WithMany("PostTags")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Bakhtawar.Models.Tag", "Tag")
                        .WithMany("PostTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Bakhtawar.Models.RoleClaim", b =>
                {
                    b.HasOne("Bakhtawar.Models.Role", "Role")
                        .WithMany("RoleClaims")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Bakhtawar.Models.UserClaim", b =>
                {
                    b.HasOne("Bakhtawar.Models.User", "User")
                        .WithMany("UserClaims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Bakhtawar.Models.UserLogin", b =>
                {
                    b.HasOne("Bakhtawar.Models.User", "User")
                        .WithMany("UserLogins")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Bakhtawar.Models.UserRole", b =>
                {
                    b.HasOne("Bakhtawar.Models.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Bakhtawar.Models.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Bakhtawar.Models.Vote", b =>
                {
                    b.HasOne("Bakhtawar.Models.Option", "Option")
                        .WithMany("Votes")
                        .HasForeignKey("OptionId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Bakhtawar.Models.Persona", "Persona")
                        .WithMany("Votes")
                        .HasForeignKey("PersonaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Bakhtawar.Models.AudioPost", b =>
                {
                    b.HasOne("Bakhtawar.Models.Audio", "Audio")
                        .WithOne("AudioPost")
                        .HasForeignKey("Bakhtawar.Models.AudioPost", "AudioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Bakhtawar.Models.GalleryPost", b =>
                {
                    b.HasOne("Bakhtawar.Models.Gallery", "Gallery")
                        .WithOne("GalleryPost")
                        .HasForeignKey("Bakhtawar.Models.GalleryPost", "GalleryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Bakhtawar.Models.ImagePost", b =>
                {
                    b.HasOne("Bakhtawar.Models.Image", "Image")
                        .WithOne("ImagePost")
                        .HasForeignKey("Bakhtawar.Models.ImagePost", "ImageId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Bakhtawar.Models.LinkPost", b =>
                {
                    b.HasOne("Bakhtawar.Models.Link", "Link")
                        .WithOne("LinkPost")
                        .HasForeignKey("Bakhtawar.Models.LinkPost", "LinkId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Bakhtawar.Models.PollPost", b =>
                {
                    b.HasOne("Bakhtawar.Models.Poll", "Poll")
                        .WithOne("PollPost")
                        .HasForeignKey("Bakhtawar.Models.PollPost", "PollId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Bakhtawar.Models.VideoPost", b =>
                {
                    b.HasOne("Bakhtawar.Models.Video", "Video")
                        .WithOne("VideoPost")
                        .HasForeignKey("Bakhtawar.Models.VideoPost", "VideoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
